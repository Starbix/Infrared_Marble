# Build stage
FROM python:3.12-slim AS builder

WORKDIR /app

# Install required packages for building
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && \
    apt-get install -y --no-install-recommends git bash gdal-bin libgdal-dev g++

# Install dependencies
COPY requirements.txt ./
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip && \
    pip install -r requirements.txt && \
    pip install --no-build-isolation --no-cache-dir --force-reinstall gdal==$(gdal-config --version)

# Copy over Blackmarble package and install
COPY .gitmodules ./
COPY .git/modules/blackmarblepy .git/modules/blackmarblepy
COPY ./blackmarblepy ./blackmarblepy
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install ./blackmarblepy

# Production stage
FROM python:3.12-slim AS production

WORKDIR /app

# Install runtime dependencies only
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && \
    apt-get install -y --no-install-recommends gdal-bin

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy source files
COPY src src

# Copy static files
COPY static/ static/

WORKDIR /app/src

ENV HOST=0.0.0.0
ENV PORT=8000
ENV DISABLE_NEST_ASYNCIO=True

EXPOSE 8000

# Production command without reload
CMD ["fastapi", "run", "api/main.py", "--host", "0.0.0.0", "--port", "8000"]
